"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.showProjectsHandler = void 0;
const tslib_1 = require("tslib");
const affected_project_graph_1 = require("../../project-graph/affected/affected-project-graph");
const file_utils_1 = require("../../project-graph/file-utils");
const command_line_utils_1 = require("../../utils/command-line-utils");
const project_graph_1 = require("../../project-graph/project-graph");
const find_matching_projects_1 = require("../../utils/find-matching-projects");
function showProjectsHandler(args) {
    return tslib_1.__awaiter(this, void 0, void 0, function* () {
        let graph = yield (0, project_graph_1.createProjectGraphAsync)();
        const nxJson = (0, file_utils_1.readNxJson)();
        const { nxArgs } = (0, command_line_utils_1.splitArgsIntoNxArgsAndOverrides)(args, 'affected', {
            printWarnings: false,
        }, nxJson);
        if (args.affected) {
            graph = yield getAffectedGraph(nxArgs, nxJson, graph);
        }
        const selectedProjects = new Set(Object.keys(graph.nodes));
        if (args.exclude) {
            const excludedProjects = (0, find_matching_projects_1.findMatchingProjects)(nxArgs.exclude, graph.nodes);
            for (const excludedProject of excludedProjects) {
                selectedProjects.delete(excludedProject);
            }
        }
        const projects = Array.from(selectedProjects).join('\n');
        if (projects.length) {
            console.log(projects);
        }
        process.exit(0);
    });
}
exports.showProjectsHandler = showProjectsHandler;
function getAffectedGraph(nxArgs, nxJson, graph) {
    return (0, affected_project_graph_1.filterAffected)(graph, (0, file_utils_1.calculateFileChanges)((0, command_line_utils_1.parseFiles)(nxArgs).files, graph.allWorkspaceFiles, nxArgs), nxJson);
}
//# sourceMappingURL=show.js.map