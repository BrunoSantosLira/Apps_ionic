{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n// TODO(FW-2832): types\nconst watchForOptions = (containerEl, tagName, onChange) => {\n  if (typeof MutationObserver === 'undefined') {\n    return;\n  }\n  const mutation = new MutationObserver(mutationList => {\n    onChange(getSelectedOption(mutationList, tagName));\n  });\n  mutation.observe(containerEl, {\n    childList: true,\n    subtree: true\n  });\n  return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n  let newOption;\n  mutationList.forEach(mut => {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < mut.addedNodes.length; i++) {\n      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n    }\n  });\n  return newOption;\n};\nconst findCheckedOption = (el, tagName) => {\n  if (el.nodeType !== 1) {\n    return undefined;\n  }\n  const options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));\n  return options.find(o => o.value === el.value);\n};\nexport { watchForOptions as w };","map":{"version":3,"names":["watchForOptions","containerEl","tagName","onChange","MutationObserver","mutation","mutationList","getSelectedOption","observe","childList","subtree","newOption","forEach","mut","i","addedNodes","length","findCheckedOption","el","nodeType","undefined","options","toUpperCase","Array","from","querySelectorAll","find","o","value","w"],"sources":["C:/Users/bruno/Desktop/ionic_curso/noticiasApp/node_modules/@ionic/core/dist/esm/watch-options-4d421847.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\n// TODO(FW-2832): types\nconst watchForOptions = (containerEl, tagName, onChange) => {\n  if (typeof MutationObserver === 'undefined') {\n    return;\n  }\n  const mutation = new MutationObserver((mutationList) => {\n    onChange(getSelectedOption(mutationList, tagName));\n  });\n  mutation.observe(containerEl, {\n    childList: true,\n    subtree: true,\n  });\n  return mutation;\n};\nconst getSelectedOption = (mutationList, tagName) => {\n  let newOption;\n  mutationList.forEach((mut) => {\n    // eslint-disable-next-line @typescript-eslint/prefer-for-of\n    for (let i = 0; i < mut.addedNodes.length; i++) {\n      newOption = findCheckedOption(mut.addedNodes[i], tagName) || newOption;\n    }\n  });\n  return newOption;\n};\nconst findCheckedOption = (el, tagName) => {\n  if (el.nodeType !== 1) {\n    return undefined;\n  }\n  const options = el.tagName === tagName.toUpperCase() ? [el] : Array.from(el.querySelectorAll(tagName));\n  return options.find((o) => o.value === el.value);\n};\n\nexport { watchForOptions as w };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAGA,CAACC,WAAW,EAAEC,OAAO,EAAEC,QAAQ,KAAK;EAC1D,IAAI,OAAOC,gBAAgB,KAAK,WAAW,EAAE;IAC3C;EACF;EACA,MAAMC,QAAQ,GAAG,IAAID,gBAAgB,CAAEE,YAAY,IAAK;IACtDH,QAAQ,CAACI,iBAAiB,CAACD,YAAY,EAAEJ,OAAO,CAAC,CAAC;EACpD,CAAC,CAAC;EACFG,QAAQ,CAACG,OAAO,CAACP,WAAW,EAAE;IAC5BQ,SAAS,EAAE,IAAI;IACfC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,OAAOL,QAAQ;AACjB,CAAC;AACD,MAAME,iBAAiB,GAAGA,CAACD,YAAY,EAAEJ,OAAO,KAAK;EACnD,IAAIS,SAAS;EACbL,YAAY,CAACM,OAAO,CAAEC,GAAG,IAAK;IAC5B;IACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,GAAG,CAACE,UAAU,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;MAC9CH,SAAS,GAAGM,iBAAiB,CAACJ,GAAG,CAACE,UAAU,CAACD,CAAC,CAAC,EAAEZ,OAAO,CAAC,IAAIS,SAAS;IACxE;EACF,CAAC,CAAC;EACF,OAAOA,SAAS;AAClB,CAAC;AACD,MAAMM,iBAAiB,GAAGA,CAACC,EAAE,EAAEhB,OAAO,KAAK;EACzC,IAAIgB,EAAE,CAACC,QAAQ,KAAK,CAAC,EAAE;IACrB,OAAOC,SAAS;EAClB;EACA,MAAMC,OAAO,GAAGH,EAAE,CAAChB,OAAO,KAAKA,OAAO,CAACoB,WAAW,CAAC,CAAC,GAAG,CAACJ,EAAE,CAAC,GAAGK,KAAK,CAACC,IAAI,CAACN,EAAE,CAACO,gBAAgB,CAACvB,OAAO,CAAC,CAAC;EACtG,OAAOmB,OAAO,CAACK,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,KAAK,KAAKV,EAAE,CAACU,KAAK,CAAC;AAClD,CAAC;AAED,SAAS5B,eAAe,IAAI6B,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}