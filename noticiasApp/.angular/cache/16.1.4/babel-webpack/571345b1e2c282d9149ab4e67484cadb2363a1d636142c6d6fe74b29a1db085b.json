{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar InAppBrowserObject = /** @class */function () {\n  /**\n   * Opens a URL in a new InAppBrowserOriginal instance, the current browser instance, or the system browser.\n   * @param {string} url     The URL to load.\n   * @param {string} [target=\"self\"]  The target in which to load the URL, an optional parameter that defaults to _self.\n   *                 _self: Opens in the WebView if the URL is in the white list, otherwise it opens in the InAppBrowserOriginal.\n   *                 _blank: Opens in the InAppBrowserOriginal.\n   *                 _system: Opens in the system's web browser.\n   * @param {string | InAppBrowserOptions} [options] Options for the InAppBrowserOriginal. Optional, defaulting to: location=yes.\n   *                 The options string must not contain any blank space, and each feature's\n   *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n   */\n  function InAppBrowserObject(url, target, options) {\n    try {\n      if (options && typeof options !== 'string') {\n        options = Object.keys(options).map(function (key) {\n          return key + \"=\" + options[key];\n        }).join(',');\n      }\n      this._objectInstance = cordova.InAppBrowser.open(url, target, options);\n    } catch (e) {\n      if (typeof window !== 'undefined') {\n        window.open(url, target);\n      }\n      console.warn('Native: InAppBrowserOriginal is not installed or you are running on a browser. Falling back to window.open.');\n    }\n  }\n  InAppBrowserObject.prototype._loadAfterBeforeload = function (strUrl) {\n    return cordovaInstance(this, \"_loadAfterBeforeload\", {\n      \"sync\": true\n    }, arguments);\n  };\n  InAppBrowserObject.prototype.show = function () {\n    return cordovaInstance(this, \"show\", {\n      \"sync\": true\n    }, arguments);\n  };\n  InAppBrowserObject.prototype.close = function () {\n    return cordovaInstance(this, \"close\", {\n      \"sync\": true\n    }, arguments);\n  };\n  InAppBrowserObject.prototype.hide = function () {\n    return cordovaInstance(this, \"hide\", {\n      \"sync\": true\n    }, arguments);\n  };\n  InAppBrowserObject.prototype.executeScript = function (script) {\n    return cordovaInstance(this, \"executeScript\", {}, arguments);\n  };\n  InAppBrowserObject.prototype.insertCSS = function (css) {\n    return cordovaInstance(this, \"insertCSS\", {}, arguments);\n  };\n  InAppBrowserObject.prototype.on = function (event) {\n    var _this = this;\n    return function () {\n      if (instanceAvailability(_this) === true) {\n        return new Observable(function (observer) {\n          _this._objectInstance.addEventListener(event, observer.next.bind(observer));\n          return function () {\n            return _this._objectInstance.removeEventListener(event, observer.next.bind(observer));\n          };\n        });\n      }\n    }();\n  };\n  InAppBrowserObject.prototype.on = function (event) {\n    var _this = this;\n    return function () {\n      if (instanceAvailability(_this) === true) {\n        return new Observable(function (observer) {\n          _this._objectInstance.addEventListener(event, observer.next.bind(observer));\n          return function () {\n            return _this._objectInstance.removeEventListener(event, observer.next.bind(observer));\n          };\n        });\n      }\n    }();\n  };\n  return InAppBrowserObject;\n}();\nexport { InAppBrowserObject };\nvar InAppBrowserOriginal = /** @class */function (_super) {\n  __extends(InAppBrowserOriginal, _super);\n  function InAppBrowserOriginal() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n  /**\n   * Opens a URL in a new InAppBrowserOriginal instance, the current browser instance, or the system browser.\n   * @param  url {string}     The URL to load.\n   * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n   * @param  options {string} Options for the InAppBrowserOriginal. Optional, defaulting to: location=yes.\n   *                 The options string must not contain any blank space, and each feature's\n   *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n   * @returns {InAppBrowserObject}\n   */\n  InAppBrowserOriginal.prototype.create = function (url, target, options) {\n    return new InAppBrowserObject(url, target, options);\n  };\n  InAppBrowserOriginal.pluginName = \"InAppBrowser\";\n  InAppBrowserOriginal.plugin = \"cordova-plugin-inappbrowser\";\n  InAppBrowserOriginal.pluginRef = \"cordova.InAppBrowser\";\n  InAppBrowserOriginal.repo = \"https://github.com/apache/cordova-plugin-inappbrowser\";\n  InAppBrowserOriginal.platforms = [\"AmazonFire OS\", \"Android\", \"Browser\", \"iOS\", \"macOS\", \"Windows\"];\n  return InAppBrowserOriginal;\n}(IonicNativePlugin);\nvar InAppBrowser = new InAppBrowserOriginal();\nexport { InAppBrowser };","map":{"version":3,"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","IonicNativePlugin","instanceAvailability","cordovaInstance","Observable","InAppBrowserObject","url","target","options","keys","map","key","join","_objectInstance","cordova","InAppBrowser","open","e","window","console","warn","_loadAfterBeforeload","strUrl","arguments","show","close","hide","executeScript","script","insertCSS","css","on","event","_this","observer","addEventListener","next","bind","removeEventListener","InAppBrowserOriginal","_super","apply","pluginName","plugin","pluginRef","repo","platforms"],"sources":["C:/Users/bruno/node_modules/@ionic-native/in-app-browser/index.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { IonicNativePlugin, instanceAvailability, cordovaInstance } from '@ionic-native/core';\nimport { Observable } from 'rxjs';\nvar InAppBrowserObject = /** @class */ (function () {\n    /**\n     * Opens a URL in a new InAppBrowserOriginal instance, the current browser instance, or the system browser.\n     * @param {string} url     The URL to load.\n     * @param {string} [target=\"self\"]  The target in which to load the URL, an optional parameter that defaults to _self.\n     *                 _self: Opens in the WebView if the URL is in the white list, otherwise it opens in the InAppBrowserOriginal.\n     *                 _blank: Opens in the InAppBrowserOriginal.\n     *                 _system: Opens in the system's web browser.\n     * @param {string | InAppBrowserOptions} [options] Options for the InAppBrowserOriginal. Optional, defaulting to: location=yes.\n     *                 The options string must not contain any blank space, and each feature's\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n     */\n    function InAppBrowserObject(url, target, options) {\n        try {\n            if (options && typeof options !== 'string') {\n                options = Object.keys(options)\n                    .map(function (key) { return key + \"=\" + options[key]; })\n                    .join(',');\n            }\n            this._objectInstance = cordova.InAppBrowser.open(url, target, options);\n        }\n        catch (e) {\n            if (typeof window !== 'undefined') {\n                window.open(url, target);\n            }\n            console.warn('Native: InAppBrowserOriginal is not installed or you are running on a browser. Falling back to window.open.');\n        }\n    }\n    InAppBrowserObject.prototype._loadAfterBeforeload = function (strUrl) { return cordovaInstance(this, \"_loadAfterBeforeload\", { \"sync\": true }, arguments); };\n    InAppBrowserObject.prototype.show = function () { return cordovaInstance(this, \"show\", { \"sync\": true }, arguments); };\n    InAppBrowserObject.prototype.close = function () { return cordovaInstance(this, \"close\", { \"sync\": true }, arguments); };\n    InAppBrowserObject.prototype.hide = function () { return cordovaInstance(this, \"hide\", { \"sync\": true }, arguments); };\n    InAppBrowserObject.prototype.executeScript = function (script) { return cordovaInstance(this, \"executeScript\", {}, arguments); };\n    InAppBrowserObject.prototype.insertCSS = function (css) { return cordovaInstance(this, \"insertCSS\", {}, arguments); };\n    InAppBrowserObject.prototype.on = function (event) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.addEventListener(event, observer.next.bind(observer));\n                    return function () { return _this._objectInstance.removeEventListener(event, observer.next.bind(observer)); };\n                });\n            }\n        })();\n    };\n    InAppBrowserObject.prototype.on = function (event) {\n        var _this = this;\n        return (function () {\n            if (instanceAvailability(_this) === true) {\n                return new Observable(function (observer) {\n                    _this._objectInstance.addEventListener(event, observer.next.bind(observer));\n                    return function () { return _this._objectInstance.removeEventListener(event, observer.next.bind(observer)); };\n                });\n            }\n        })();\n    };\n    return InAppBrowserObject;\n}());\nexport { InAppBrowserObject };\nvar InAppBrowserOriginal = /** @class */ (function (_super) {\n    __extends(InAppBrowserOriginal, _super);\n    function InAppBrowserOriginal() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Opens a URL in a new InAppBrowserOriginal instance, the current browser instance, or the system browser.\n     * @param  url {string}     The URL to load.\n     * @param  target {string}  The target in which to load the URL, an optional parameter that defaults to _self.\n     * @param  options {string} Options for the InAppBrowserOriginal. Optional, defaulting to: location=yes.\n     *                 The options string must not contain any blank space, and each feature's\n     *                 name/value pairs must be separated by a comma. Feature names are case insensitive.\n     * @returns {InAppBrowserObject}\n     */\n    InAppBrowserOriginal.prototype.create = function (url, target, options) {\n        return new InAppBrowserObject(url, target, options);\n    };\n    InAppBrowserOriginal.pluginName = \"InAppBrowser\";\n    InAppBrowserOriginal.plugin = \"cordova-plugin-inappbrowser\";\n    InAppBrowserOriginal.pluginRef = \"cordova.InAppBrowser\";\n    InAppBrowserOriginal.repo = \"https://github.com/apache/cordova-plugin-inappbrowser\";\n    InAppBrowserOriginal.platforms = [\"AmazonFire OS\", \"Android\", \"Browser\", \"iOS\", \"macOS\", \"Windows\"];\n    return InAppBrowserOriginal;\n}(IonicNativePlugin));\nvar InAppBrowser = new InAppBrowserOriginal();\nexport { InAppBrowser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}