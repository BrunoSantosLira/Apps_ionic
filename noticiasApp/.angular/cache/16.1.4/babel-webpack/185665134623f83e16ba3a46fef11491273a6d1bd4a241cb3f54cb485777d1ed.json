{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/servico/puxar-feed.service\";\nimport * as i2 from \"src/app/app.component\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/forms\";\nclass LoginPage {\n  constructor(service, app_comp, toastCtrl) {\n    this.service = service;\n    this.app_comp = app_comp;\n    this.toastCtrl = toastCtrl;\n    this.dados = {\n      email: \"\",\n      senha: \"\"\n    };\n    this.nome = '';\n    this.email = '';\n  }\n  ngOnInit() {}\n  logar(form) {\n    this.service.logar(form.value.email, form.value.senha).subscribe(response => {\n      //Object.keys(response).length\n      this.login_infos = response;\n      console.log(this.login_infos[0].id);\n      this.nome = this.login_infos[0].nome;\n      this.email = this.login_infos[0].email;\n      //passando informações pro app componente\n      this.app_comp.mudarInfo(this.nome, this.email);\n      this.toastCtrl.create({\n        message: 'Usuario logado com sucesso!!',\n        color: 'success',\n        duration: 2500\n      }).then(toast => {\n        toast.present();\n      });\n    });\n  }\n}\nLoginPage.ɵfac = function LoginPage_Factory(t) {\n  return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.PuxarFeedService), i0.ɵɵdirectiveInject(i2.AppComponent), i0.ɵɵdirectiveInject(i3.ToastController));\n};\nLoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPage,\n  selectors: [[\"app-login\"]],\n  decls: 18,\n  vars: 4,\n  consts: [[3, \"translucent\"], [\"color\", \"danger\"], [\"color\", \"dark\", \"slot\", \"start\"], [3, \"fullscreen\"], [3, \"ngSubmit\"], [\"f\", \"ngForm\"], [\"position\", \"floating\"], [\"name\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [\"name\", \"senha\", 3, \"ngModel\", \"ngModelChange\"], [\"fill\", \"outline\", \"expand\", \"block\", \"type\", \"submit\", \"color\", \"success\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\", 1)(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"ion-menu-button\", 2);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(5, \"ion-content\", 3)(6, \"form\", 4, 5);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_6_listener() {\n        i0.ɵɵrestoreView(_r1);\n        const _r0 = i0.ɵɵreference(7);\n        return i0.ɵɵresetView(ctx.logar(_r0));\n      });\n      i0.ɵɵelementStart(8, \"ion-item\")(9, \"ion-label\", 6);\n      i0.ɵɵtext(10, \"Email:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"ion-input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_11_listener($event) {\n        return ctx.dados.email = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"ion-item\")(13, \"ion-label\", 6);\n      i0.ɵɵtext(14, \"Senha:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"ion-input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginPage_Template_ion_input_ngModelChange_15_listener($event) {\n        return ctx.dados.senha = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"ion-button\", 9);\n      i0.ɵɵtext(17, \"Logar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"translucent\", true);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"fullscreen\", true);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.dados.email);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.dados.senha);\n    }\n  },\n  dependencies: [i4.ɵNgNoValidate, i4.NgControlStatus, i4.NgControlStatusGroup, i4.NgModel, i4.NgForm, i3.IonButton, i3.IonContent, i3.IonHeader, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonMenuButton, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { LoginPage };","map":{"version":3,"names":["LoginPage","constructor","service","app_comp","toastCtrl","dados","email","senha","nome","ngOnInit","logar","form","value","subscribe","response","login_infos","console","log","id","mudarInfo","create","message","color","duration","then","toast","present","i0","ɵɵdirectiveInject","i1","PuxarFeedService","i2","AppComponent","i3","ToastController","selectors","decls","vars","consts","template","LoginPage_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","LoginPage_Template_form_ngSubmit_6_listener","ɵɵrestoreView","_r1","_r0","ɵɵreference","ɵɵresetView","LoginPage_Template_ion_input_ngModelChange_11_listener","$event","LoginPage_Template_ion_input_ngModelChange_15_listener","ɵɵproperty","ɵɵadvance"],"sources":["C:\\Users\\bruno\\Desktop\\ionic_curso\\noticiasApp\\src\\app\\pagina\\login\\login.page.ts","C:\\Users\\bruno\\Desktop\\ionic_curso\\noticiasApp\\src\\app\\pagina\\login\\login.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ToastController } from '@ionic/angular';\nimport { AppComponent } from 'src/app/app.component';\nimport { PuxarFeedService, login_infos } from 'src/app/servico/puxar-feed.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\ndados = {\n  email: \"\",\n  senha: \"\"\n}\nnome = '';\nemail = ''\n\nlogin_infos : login_infos[] | any;\n\n\n  constructor(private service: PuxarFeedService, private app_comp: AppComponent, private toastCtrl: ToastController) { }\n\n  ngOnInit() {\n   \n  }\n\n  logar(form: NgForm){\n  \n    this.service.logar(form.value.email, form.value.senha).subscribe(response =>{\n      //Object.keys(response).length\n\n      \n     this.login_infos = response;\n     console.log(this.login_infos[0].id);\n\n      this.nome = this.login_infos[0].nome\n      this.email = this.login_infos[0].email\n\n     //passando informações pro app componente\n    this.app_comp.mudarInfo(this.nome, this.email)\n\n    this.toastCtrl.create({\n      message: 'Usuario logado com sucesso!!',\n      color: 'success',\n      duration: 2500\n    }).then(toast => {\n      toast.present()\n    })\n\n    })\n\n    \n  }\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"danger\">\n    <ion-title>Login</ion-title>\n    <ion-menu-button color=\"dark\" slot=\"start\"></ion-menu-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n <form #f=\"ngForm\" (ngSubmit)=\"logar(f)\">\n\n  <ion-item>\n    <ion-label position=\"floating\">Email:</ion-label>\n    <ion-input [(ngModel)]=\"dados.email\" name=\"email\"></ion-input>\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"floating\">Senha:</ion-label>\n    <ion-input [(ngModel)]=\"dados.senha\" name=\"senha\"></ion-input>\n  </ion-item>\n\n  <ion-button fill=\"outline\" expand=\"block\" type=\"submit\" color=\"success\">Logar</ion-button>\n</form>\n</ion-content>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}